import React, { useState, useEffect } from 'react';
import './CourseManagement.css';

const CourseManagement = () => {
  const [courses, setCourses] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterCategory, setFilterCategory] = useState('');
  const [filterStatus, setFilterStatus] = useState('');
  const [showCourseModal, setShowCourseModal] = useState(false);
  const [selectedCourse, setSelectedCourse] = useState(null);
  const [editingCourse, setEditingCourse] = useState(null);

  useEffect(() => {
    fetchCourses();
  }, []);

  const fetchCourses = async () => {
    try {
      setLoading(true);
      
      // –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ
      setTimeout(() => {
        setCourses([
          {
            id: 1,
            title: '–ö–≤–∞–Ω—Ç–æ–≤–∞—è —Ñ–∏–∑–∏–∫–∞ –¥–ª—è –ò–ò',
            description: '–ò–∑—É—á–µ–Ω–∏–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –≤ –º–∞—à–∏–Ω–Ω–æ–º –æ–±—É—á–µ–Ω–∏–∏',
            category: 'quantum',
            status: 'published',
            price: 25000,
            students: 156,
            rating: 4.8,
            lessons: 12,
            duration: '8 –Ω–µ–¥–µ–ª—å',
            instructor: '–î—Ä. –ê–ª–µ–∫—Å–µ–π –ö–≤–∞–Ω—Ç–æ–≤',
            createdAt: '2024-01-15',
            updatedAt: '2024-09-20',
            thumbnail: 'üß¨',
            tags: ['–∫–≤–∞–Ω—Ç–æ–≤–∞—è —Ñ–∏–∑–∏–∫–∞', '–ò–ò', '–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ']
          },
          {
            id: 2,
            title: '–ù–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –±—É–¥—É—â–µ–≥–æ',
            description: '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –º–æ–∑–≥-–∫–æ–º–ø—å—é—Ç–µ—Ä',
            category: 'neural',
            status: 'draft',
            price: 30000,
            students: 89,
            rating: 4.9,
            lessons: 15,
            duration: '10 –Ω–µ–¥–µ–ª—å',
            instructor: '–ü—Ä–æ—Ñ. –ú–∞—Ä–∏—è –ù–µ–π—Ä–æ–Ω',
            createdAt: '2024-02-10',
            updatedAt: '2024-09-18',
            thumbnail: 'üß†',
            tags: ['–Ω–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã', 'BCI', '–Ω–µ–π—Ä–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏']
          },
          {
            id: 3,
            title: '–ú–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–∞—è –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
            description: '–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –º–∏—Ä–æ–≤ –≤ VR/AR',
            category: 'metaverse',
            status: 'published',
            price: 20000,
            students: 234,
            rating: 4.7,
            lessons: 10,
            duration: '6 –Ω–µ–¥–µ–ª—å',
            instructor: '–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –ú–∏—Ä–æ–≤',
            createdAt: '2024-03-05',
            updatedAt: '2024-09-21',
            thumbnail: 'üåê',
            tags: ['–º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–∞—è', 'VR', 'AR', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ']
          },
          {
            id: 4,
            title: '–ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ü–∏–∏',
            description: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ 3D –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏',
            category: 'hologram',
            status: 'published',
            price: 18000,
            students: 167,
            rating: 4.6,
            lessons: 8,
            duration: '5 –Ω–µ–¥–µ–ª—å',
            instructor: '–ì–æ–ª–æ–≥—Ä–∞—Ñ –ú–∞–∫—Å',
            createdAt: '2024-04-12',
            updatedAt: '2024-09-19',
            thumbnail: '‚ú®',
            tags: ['–≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—è', '3D', '–ø—Ä–æ–µ–∫—Ü–∏–∏']
          },
          {
            id: 5,
            title: '–ö–≤–∞–Ω—Ç–æ–≤—ã–µ –º–µ–Ω—Ç–æ—Ä—ã –ò–ò',
            description: '–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è',
            category: 'ai',
            status: 'archived',
            price: 35000,
            students: 45,
            rating: 4.9,
            lessons: 20,
            duration: '12 –Ω–µ–¥–µ–ª—å',
            instructor: '–ò–ò-–≠–π–Ω—à—Ç–µ–π–Ω',
            createdAt: '2024-05-20',
            updatedAt: '2024-09-15',
            thumbnail: 'ü§ñ',
            tags: ['–ò–ò', '–º–µ–Ω—Ç–æ—Ä—ã', '–∫–≤–∞–Ω—Ç–æ–≤—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è']
          }
        ]);
        setLoading(false);
      }, 1000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤:', error);
      setLoading(false);
    }
  };

  const filteredCourses = courses.filter(course => {
    const matchesSearch = course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         course.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         course.instructor.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = !filterCategory || course.category === filterCategory;
    const matchesStatus = !filterStatus || course.status === filterStatus;
    
    return matchesSearch && matchesCategory && matchesStatus;
  });

  const getCategoryIcon = (category) => {
    switch (category) {
      case 'quantum': return 'üß¨';
      case 'neural': return 'üß†';
      case 'metaverse': return 'üåê';
      case 'hologram': return '‚ú®';
      case 'ai': return 'ü§ñ';
      default: return 'üìö';
    }
  };

  const getCategoryName = (category) => {
    switch (category) {
      case 'quantum': return '–ö–≤–∞–Ω—Ç–æ–≤–∞—è —Ñ–∏–∑–∏–∫–∞';
      case 'neural': return '–ù–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã';
      case 'metaverse': return '–ú–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–∞—è';
      case 'hologram': return '–ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—è';
      case 'ai': return '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç';
      default: return category;
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'published': return '#28a745';
      case 'draft': return '#ffc107';
      case 'archived': return '#6c757d';
      default: return '#6c757d';
    }
  };

  const getStatusText = (status) => {
    switch (status) {
      case 'published': return '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω';
      case 'draft': return '–ß–µ—Ä–Ω–æ–≤–∏–∫';
      case 'archived': return '–ê—Ä—Ö–∏–≤';
      default: return status;
    }
  };

  const openCourseModal = (course) => {
    setSelectedCourse(course);
    setShowCourseModal(true);
  };

  const editCourse = (course) => {
    setEditingCourse(course);
    setShowCourseModal(true);
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  if (loading) {
    return (
      <div className="course-management">
        <div className="loading">
          <div className="spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="course-management">
      <div className="management-header">
        <h1>üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏</h1>
        <p>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º</p>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
      <div className="filters-section">
        <div className="search-box">
          <input
            type="text"
            placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –æ–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="search-input"
          />
        </div>

        <div className="filters">
          <select
            value={filterCategory}
            onChange={(e) => setFilterCategory(e.target.value)}
            className="filter-select"
          >
            <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            <option value="quantum">–ö–≤–∞–Ω—Ç–æ–≤–∞—è —Ñ–∏–∑–∏–∫–∞</option>
            <option value="neural">–ù–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã</option>
            <option value="metaverse">–ú–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–∞—è</option>
            <option value="hologram">–ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—è</option>
            <option value="ai">–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç</option>
          </select>

          <select
            value={filterStatus}
            onChange={(e) => setFilterStatus(e.target.value)}
            className="filter-select"
          >
            <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
            <option value="published">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω</option>
            <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
            <option value="archived">–ê—Ä—Ö–∏–≤</option>
          </select>
        </div>

        <div className="actions">
          <button className="action-btn primary">
            ‚ûï –°–æ–∑–¥–∞—Ç—å –∫—É—Ä—Å
          </button>
          <button className="action-btn secondary">
            üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫—É—Ä—Å–æ–≤
          </button>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="stats-row">
        <div className="stat-item">
          <div className="stat-number">{courses.length}</div>
          <div className="stat-label">–í—Å–µ–≥–æ –∫—É—Ä—Å–æ–≤</div>
        </div>
        <div className="stat-item">
          <div className="stat-number">{courses.filter(c => c.status === 'published').length}</div>
          <div className="stat-label">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö</div>
        </div>
        <div className="stat-item">
          <div className="stat-number">{courses.reduce((sum, c) => sum + c.students, 0)}</div>
          <div className="stat-label">–°—Ç—É–¥–µ–Ω—Ç–æ–≤</div>
        </div>
        <div className="stat-item">
          <div className="stat-number">{courses.reduce((sum, c) => sum + c.price * c.students, 0).toLocaleString()} ‚ÇΩ</div>
          <div className="stat-label">–í—ã—Ä—É—á–∫–∞</div>
        </div>
      </div>

      {/* –°–µ—Ç–∫–∞ –∫—É—Ä—Å–æ–≤ */}
      <div className="courses-grid">
        {filteredCourses.map(course => (
          <div key={course.id} className="course-card">
            <div className="course-header">
              <div className="course-thumbnail">{course.thumbnail}</div>
              <div className="course-status">
                <span 
                  className="status-badge"
                  style={{ color: getStatusColor(course.status) }}
                >
                  ‚óè {getStatusText(course.status)}
                </span>
              </div>
            </div>

            <div className="course-content">
              <div className="course-category">
                {getCategoryIcon(course.category)} {getCategoryName(course.category)}
              </div>
              
              <h3 className="course-title" onClick={() => openCourseModal(course)}>
                {course.title}
              </h3>
              
              <p className="course-description">{course.description}</p>
              
              <div className="course-instructor">
                üë®‚Äçüè´ {course.instructor}
              </div>

              <div className="course-stats">
                <div className="stat">
                  <span className="stat-icon">üë•</span>
                  <span className="stat-value">{course.students}</span>
                </div>
                <div className="stat">
                  <span className="stat-icon">‚≠ê</span>
                  <span className="stat-value">{course.rating}</span>
                </div>
                <div className="stat">
                  <span className="stat-icon">üìö</span>
                  <span className="stat-value">{course.lessons}</span>
                </div>
                <div className="stat">
                  <span className="stat-icon">‚è±Ô∏è</span>
                  <span className="stat-value">{course.duration}</span>
                </div>
              </div>

              <div className="course-price">
                {course.price.toLocaleString()} ‚ÇΩ
              </div>

              <div className="course-tags">
                {course.tags.map((tag, index) => (
                  <span key={index} className="tag">#{tag}</span>
                ))}
              </div>
            </div>

            <div className="course-actions">
              <button 
                className="action-btn view"
                onClick={() => openCourseModal(course)}
                title="–ü—Ä–æ—Å–º–æ—Ç—Ä"
              >
                üëÅÔ∏è
              </button>
              <button 
                className="action-btn edit"
                onClick={() => editCourse(course)}
                title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
              >
                ‚úèÔ∏è
              </button>
              <button 
                className="action-btn analytics"
                title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
              >
                üìä
              </button>
              <button 
                className="action-btn duplicate"
                title="–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å"
              >
                üìã
              </button>
              <button 
                className="action-btn archive"
                title="–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
              >
                üì¶
              </button>
            </div>
          </div>
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫—É—Ä—Å–∞ */}
      {showCourseModal && selectedCourse && (
        <div className="modal-overlay" onClick={() => setShowCourseModal(false)}>
          <div className="course-modal" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h2>üìö {selectedCourse.title}</h2>
              <button 
                className="close-btn"
                onClick={() => setShowCourseModal(false)}
              >
                √ó
              </button>
            </div>
            
            <div className="modal-content">
              <div className="course-details">
                <div className="course-info">
                  <div className="course-meta">
                    <div className="meta-item">
                      <span className="meta-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                      <span className="meta-value">
                        {getCategoryIcon(selectedCourse.category)} {getCategoryName(selectedCourse.category)}
                      </span>
                    </div>
                    <div className="meta-item">
                      <span className="meta-label">–°—Ç–∞—Ç—É—Å:</span>
                      <span 
                        className="meta-value"
                        style={{ color: getStatusColor(selectedCourse.status) }}
                      >
                        ‚óè {getStatusText(selectedCourse.status)}
                      </span>
                    </div>
                    <div className="meta-item">
                      <span className="meta-label">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</span>
                      <span className="meta-value">{selectedCourse.instructor}</span>
                    </div>
                    <div className="meta-item">
                      <span className="meta-label">–¶–µ–Ω–∞:</span>
                      <span className="meta-value">{selectedCourse.price.toLocaleString()} ‚ÇΩ</span>
                    </div>
                  </div>

                  <div className="course-description-full">
                    <h4>–û–ø–∏—Å–∞–Ω–∏–µ:</h4>
                    <p>{selectedCourse.description}</p>
                  </div>

                  <div className="course-stats-detailed">
                    <div className="stat-card">
                      <div className="stat-icon">üë•</div>
                      <div className="stat-info">
                        <div className="stat-value">{selectedCourse.students}</div>
                        <div className="stat-label">–°—Ç—É–¥–µ–Ω—Ç–æ–≤</div>
                      </div>
                    </div>
                    <div className="stat-card">
                      <div className="stat-icon">‚≠ê</div>
                      <div className="stat-info">
                        <div className="stat-value">{selectedCourse.rating}</div>
                        <div className="stat-label">–†–µ–π—Ç–∏–Ω–≥</div>
                      </div>
                    </div>
                    <div className="stat-card">
                      <div className="stat-icon">üìö</div>
                      <div className="stat-info">
                        <div className="stat-value">{selectedCourse.lessons}</div>
                        <div className="stat-label">–£—Ä–æ–∫–æ–≤</div>
                      </div>
                    </div>
                    <div className="stat-card">
                      <div className="stat-icon">‚è±Ô∏è</div>
                      <div className="stat-info">
                        <div className="stat-value">{selectedCourse.duration}</div>
                        <div className="stat-label">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</div>
                      </div>
                    </div>
                  </div>

                  <div className="course-dates">
                    <div className="date-item">
                      <span className="date-label">–°–æ–∑–¥–∞–Ω:</span>
                      <span className="date-value">{formatDate(selectedCourse.createdAt)}</span>
                    </div>
                    <div className="date-item">
                      <span className="date-label">–û–±–Ω–æ–≤–ª–µ–Ω:</span>
                      <span className="date-value">{formatDate(selectedCourse.updatedAt)}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div className="modal-actions">
              <button className="btn secondary" onClick={() => setShowCourseModal(false)}>
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
              <button className="btn primary">
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default CourseManagement;
